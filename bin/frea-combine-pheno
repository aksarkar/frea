#!/usr/bin/env python3
import argparse
import contextlib
import pickle
import sys

from frea.simulation import *

parser = argparse.ArgumentParser(description='Generate a Gaussian phenotype given per-chromosome genetic values')
parser.add_argument('files', nargs='+', help='Genetic values (output by frea-sample-events)')
parser.add_argument('output_file', help='Output file name')
parser.add_argument('--pve', help='Target PVE', default=0.5)
args = parser.parse_args()

with contextlib.ExitStack() as stack:
    files = [stack.enter_context(open(f, 'rb')) for f in args.files]
    state = [pickle.load(f) for f in files]
    seed = state[0]['seed']
    values = numpy.array([s['y'] for s in state])
    y = combine_genetic_values(seed, values, float(args.pve))
with open(args.output_file, 'wb') as f:
    pickle.dump(y, f)
